name: 'Terraform Module Initialization'
description: 'Tests the Terraform module.'

inputs:
  tf_path:
    description: "The path to the directory that contains the Terraform configuration."
    required: true

runs:
  using: 'composite'

  steps:

    - name: Matrix Config
      shell: sh
      run: |
        echo "${{ toJSON(matrix) }}"

    # If we're running in a container, we have to install some additional
    # packages in order to install Terraform.
    - name: Install Packages
      if: matrix.container.image != ''
      shell: sh
      run: |
        # CentOS needs a mirror added
        if test -f "/etc/centos-release"; then
          sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
        fi

        if [ -x "$(command -v apk)" ]; then
          apk add --no-cache nodejs unzip tar gzip
        elif [ -x "$(command -v apt-get)" ]; then
          apt-get update
          apt-get install -y nodejs unzip tar gzip
        elif [ -x "$(command -v dnf)" ]; then
          dnf module -y reset nodejs
          dnf module -y enable nodejs:20
          dnf module install -y nodejs:20/common
          dnf install -y unzip tar gzip
        elif [ -x "$(command -v yum)" ]; then
          yum -y update
          yum install -y nodejs unzip tar gzip
        else
          echo "No package manager found">&2
          exit 1
        fi

    # Install Terraform
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ matrix.terraform_version }}

    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v3

    # Initialize the workspace
    - name: Terraform Init
      shell: sh
      working-directory: ${{ inputs.tf_path }}
      run: terraform init
