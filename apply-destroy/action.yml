name: 'Terraform Module Testing (Apply & Destroy)'
description: 'Tests the Terraform module with a standard apply and destroy.'

inputs:
  tf_path:
    description: "The path to the directory that contains the Terraform configuration."
    required: true
  tf_vars:
    description: "A list (newline-deliniated string) of key-value pairs (e.g. key1=value1)."
    required: false
    default: ""

runs:
  using: 'composite'

  steps:

    # Process the input variables that are given in the input JSON
    - name: Prepare Input Variables
      id: input-vars
      shell: bash
      run: |
        # Parse each line into its own array element
        readarray -t tf_args <<<$(cat <<EOF
        ${{ toJSON(inputs.tf_vars) }}
        EOF
        )
        tf_vars=""
        # Filter out lines that don't have an equals sign
        for index in "${!tf_args[@]}" ; do 
            if [[ "${tf_args[index]}" =~ .*"=".* ]]; then
                if [ "$tf_vars" != "" ]; then
                    tf_vars="$tf_vars "
                fi
                tf_vars="${tf_vars}-var=\"$(echo "${tf_args[index]}" | xargs)\""
            fi
        done
        echo "tf_vars=$tf_vars" >> $GITHUB_OUTPUT

    - name: Show Input Variables
      shell: sh
      run: |
        echo "${{ steps.input-vars.outputs.tf_vars }}"

    # Apply the Terraform config
    - name: Terraform Apply
      shell: sh
      working-directory: ${{ inputs.testing_path }}
      run: terraform apply -auto-approve ${{ steps.input-vars.outputs.tf_vars }}
    
    # Destroy the Terraform config
    - name: Terraform Destroy
      shell: sh
      working-directory: ${{ inputs.testing_path }}
      run: terraform destroy -auto-approve ${{ steps.input-vars.outputs.tf_vars }}
